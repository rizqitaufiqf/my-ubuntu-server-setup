version: '3.9'

services:
  redis:
    image: redis:latest
    container_name: db-redis
    restart: unless-stopped
    # ports:
    #   - "6379:6379"
    volumes:
      - data:/data
    command: '--requirepass ${REDIS_HOST_PASSWORD}'
    labels:
      - traefik.enable=true
      - traefik.tcp.routers.redis.rule=HostSNI("*")
      - traefik.tcp.routers.redis.entrypoints=redis
      - traefik.tcp.services.redis.loadbalancer.server.port=6379
    networks:
      - backend
    env_file:
      - ./.env

#  redis-nopass:
#    image: redis:latest
#    container_name: db-redis-nopass
#    restart: unless-stopped
#    # ports:
#    #   - "6380:6380"
#    volumes:
#      - data-nopass:/data
#    command: '--port 6380'
#    labels:
#      - traefik.enable=true
#      - traefik.tcp.routers.redisnopass.rule=HostSNI("*")
#      - traefik.tcp.routers.redisnopass.entrypoints=redisnopass
#      - traefik.tcp.services.redisnopass.loadbalancer.server.port=6380
#    networks:
#      - backend

  redisinsight:
    image: redislabs/redisinsight
    restart: unless-stopped
    container_name: db-redisinsight
    environment:
      RIPORT: 8889
      RITRUSTEDORIGINS: https://redisinsight.reredesu.my.id
    # ports:
    #   - "8889:8889"
    labels:
      - traefik.enable=true
      - traefik.http.routers.redisinsight.rule=Host(`redisinsight.${HOST}`)
      - traefik.http.services.redisinsight.loadbalancer.server.port=8889
      - traefik.http.routers.redisinsight.middlewares=authelia@docker
      # - traefik.http.routers.redisinsight.middlewares=mygeoblock@file
    depends_on:
      - redis
    networks:
      - backend

volumes:
  data:
  data-nopass:

networks:
  backend:
    external: true