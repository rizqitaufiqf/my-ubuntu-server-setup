version: '3.9'

services:
  traefik:
    image: traefik:v3.0
    container_name: tr-traefik
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    networks:
      - backend
    environment:
      - TRAEFIK_CERTIFICATESRESOLVERS_MYRESOLVER_ACME_EMAIL=${EMAIL}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./letsencrypt:/letsencrypt
      - /etc/timezone:/etc/timezone:ro
      - ${PWD}/config:/etc/traefik
      # - /var/log:/var/log
    labels:
      - traefik.enable=true
      - traefik.http.routers.mydashboard.rule=Host(`traefik.${HOST}`)|| Host(`www.traefik.${HOST}`)
      - traefik.http.routers.mydashboard.service=api@internal
      - traefik.http.routers.mydashboard.middlewares=myauth
      - traefik.http.middlewares.myauth.basicauth.users=${BASIC_AUTH}
    env_file:
      - ./.env

  # whoami:
  #   image: traefik/whoami:v1.8
  #   container_name: tr-whoami
  #   networks:
  #     - backend
  #   labels:
  #     - traefik.enable=true
  #     - traefik.http.routers.mywhoami.rule=Host(`whoami.${HOST}`) || Host(`www.whoami.${HOST}`)
  #     - traefik.http.services.mywhoami.loadbalancer.server.port=80
  #     - traefik.http.middlewares.mywwwredirect.redirectregex.regex=^https://www\.(.*)
  #     - traefik.http.middlewares.mywwwredirect.redirectregex.replacement=https://$${1}
  #     - traefik.http.routers.mywhoami.middlewares=mywwwredirect

networks:
  backend:
    external: true
