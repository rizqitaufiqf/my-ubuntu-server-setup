version: '3.9'

services:
  traefik:
    image: traefik:v3.0
    container_name: tr-traefik
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      # for db ports
      - "1433:1433"
      - "5432:5432"
      - "3306:3306"
      - "6379:6379"
      # - "6380:6380"
      - "5672:5672"
    networks:
      - backend
    environment:
      - TRAEFIK_CERTIFICATESRESOLVERS_MYRESOLVER_ACME_EMAIL=${EMAIL}
      - TZ=Asia/Jakarta
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./letsencrypt:/letsencrypt
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - ${PWD}/config:/etc/traefik
      - ./logs:/var/log/traefik
    labels:
      - traefik.enable=true
      - traefik.http.routers.mydashboard.rule=Host(`traefik.${HOST}`)
      - traefik.http.routers.mydashboard.service=api@internal
      - traefik.http.routers.mydashboard.middlewares=myauth
      - traefik.http.middlewares.myauth.basicauth.users=${BASIC_AUTH}
      - traefik.http.routers.mydashboard.middlewares=authelia@docker,mygeoblock@file
    env_file:
      - ./.env

  logrotate:
    image: vegardit/traefik-logrotate:latest
    container_name: tr-traefik-logrotate
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:rw # required to send USR1 signal to Traefik after log rotation
      - ./logs:/var/log/traefik:rw # folder containing access.log file
    environment:
      TZ: "Asia/Jakarta"
      # all environment variables are optional and show the default values:
      LOGROTATE_LOGS: "/var/log/traefik/*.log" # log files to rotate, directory must match volume mount
      LOGROTATE_TRIGGER_INTERVAL: weekly  # rotate weekly, must be one of: daily, weekly, monthly, yearly
      LOGROTATE_TRIGGER_SIZE: 50M        # rotate if log file size reaches 50MB
      LOGROTATE_MAX_BACKUPS: 14          # keep 14 backup copies per rotated log file
      LOGROTATE_START_INDEX: 1           # first rotated file is called access.1.log
      LOGROTATE_FILE_MODE: 0644          # file mode of the rotated file
      LOGROTATE_FILE_USER: root          # owning user of the rotated file
      LOGROTATE_FILE_GROUP: root         # owning group of the rotated file
      CRON_SCHEDULE: "* * * * *"
      CRON_LOG_LEVEL: 8                  # see https://unix.stackexchange.com/a/414010/378036
      # command to determine the id of the container running Traefik:
      TRAEFIK_CONTAINER_ID_COMMAND: docker ps --no-trunc --quiet --filter label=org.opencontainers.image.title=Traefik
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
    networks:
      - backend

#  jaeger:
#    image: jaegertracing/all-in-one:latest
#    container_name: tr-jaeger
#    restart: unless-stopped
#    volumes:
#      - "./jaeger-ui.json:/etc/jaeger/jaeger-ui.json"
#    command: --query.ui-config /etc/jaeger/jaeger-ui.json
#    environment:
#      - METRICS_STORAGE_TYPE=prometheus
#      - PROMETHEUS_SERVER_URL=http://sm-prometheus:9090
#      - PROMETHEUS_QUERY_SUPPORT_SPANMETRICS_CONNECTOR=${PROMETHEUS_QUERY_SUPPORT_SPANMETRICS_CONNECTOR:-true}
#      - PROMETHEUS_QUERY_NAMESPACE=${PROMETHEUS_QUERY_NAMESPACE:-}
#      - PROMETHEUS_QUERY_DURATION_UNIT=${PROMETHEUS_QUERY_DURATION_UNIT:-}
#      - PROMETHEUS_QUERY_NORMALIZE_CALLS=true
#      - PROMETHEUS_QUERY_NORMALIZE_DURATION=true
#    ports:
#      # jaeger agent
#      - "6831:6831/udp"
#      # sampling
#      - "5778:5778"
#      # jaeger ui
#      - "16686:16686"
#    networks:
#      - backend

  # whoami:
  #   image: traefik/whoami:v1.8
  #   container_name: tr-whoami
  #   networks:
  #     - backend
  #   labels:
  #     - traefik.enable=true
  #     - traefik.http.routers.mywhoami.rule=Host(`whoami.${HOST}`)
  #     - traefik.http.services.mywhoami.loadbalancer.server.port=80
  #     - traefik.http.middlewares.mywwwredirect.redirectregex.regex=^https://www\.(.*)
  #     - traefik.http.middlewares.mywwwredirect.redirectregex.replacement=https://$${1}
  #     - traefik.http.routers.mywhoami.middlewares=mywwwredirect

networks:
  backend:
    external: true
