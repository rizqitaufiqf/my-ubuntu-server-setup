version: '3.9'

services:
  prometheus:
    image: prom/prometheus:latest
    container_name: sm-prometheus
    restart: unless-stopped
    command:
      - --storage.tsdb.retention.time=7d
      - --config.file=/etc/prometheus/prometheus.yml
      # - --storage.tsdb.retention.size=10GB
    # ports:
    #  - "9090:9090"
    environment:
      - TZ=Asia/Jakarta
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - prometheus-data:/prometheus
    networks:
      - backend

  grafana:
    image: grafana/grafana:latest
    container_name: sm-grafana
    restart: unless-stopped
    # ports:
    #   - "9000:9111"
    environment:
      - TZ=Asia/Jakarta
      - "GF_SERVER_HTTP_PORT=9111"
    volumes:
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - backend
    # enable this to use traefik
    labels:
      - traefik.enable=true
      - traefik.http.routers.grafana.rule=Host(`grafana.${HOST}`)
      - traefik.http.services.grafana.loadbalancer.server.port=9111
      - traefik.http.routers.grafana.middlewares=authelia@docker,mygeoblock@file

  node-exporter:
    image: prom/node-exporter:latest
    container_name: sm-node-exporter
    restart: unless-stopped
    # ports:
    #   - "9100:9100"
    volumes:
      # Remember to use read-only bind mounts.
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - "--web.listen-address=:9100"
      - "--path.procfs=/host/proc"
      - "--path.sysfs=/host/sys"
      - "--path.rootfs=/rootfs" # Necessary for collecting host filesystem metrics.
      - "--collector.filesystem.ignored-mount-points='^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)'"
    networks:
      - backend

  # this cronjob is for truncate database in postgresql every 4 hours
#  cron:
#    build:
#      context: cron
#      dockerfile: Dockerfile
#    container_name: sm-cron
#    restart: unless-stopped
#    environment:
#      - DATABASE_TYPE=${DATABASE_TYPE}
#      - DATABASE_HOST=${DATABASE_HOST}
#      - DATABASE_PORT=${DATABASE_PORT}
#      - DATABASE_NAME=${DATABASE_NAME}
#      - DATABASE_USERNAME=${DATABASE_USERNAME}
#      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
#    env_file:
#      - .env
#    networks:
#      - backend

#  heimdall:
#    image: ghcr.io/linuxserver/heimdall:latest
#    container_name: sm-heimdall
#    restart: unless-stopped
#    networks:
#      - backend
#    environment:
#      - LOG_LEVEL=debug
#    labels:
#      - traefik.enable=true
#      - traefik.http.routers.heimdall.rule=Host(`heimdall.${HOST}`)
#      - traefik.http.routers.heimdall.middlewares=authelia@docker,mygeoblock@file
#      - traefik.http.services.heimdall.loadbalancer.server.port=80
#    volumes:
#      - ./heimdall/config:/config

volumes:
  prometheus-data:

networks:
  backend:
    external: true
